<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hpPrice.repository.mybatis.PostMapper">

    <sql id="paging">
        <if test="pageDto != null">
            LIMIT #{pageDto.pageCount}, #{pageDto.pageView}
        </if>
    </sql>

    <!-- 검색 쿼리 대소문자 구분없이 검색할 수 있도록 -->

    <sql id="search">
        <where>
            <if test="cond != null">
                <if test="cond.searchType == 'title' and cond.keyword != ''">
                    LOWER(PI.TITLE) LIKE LOWER(CONCAT('%', #{cond.keyword}, '%'))
                </if>
                <if test="cond.searchType == 'nickname' and cond.keyword != ''">
                    LOWER(PI.NICKNAME) LIKE LOWER(CONCAT('%', #{cond.keyword}, '%'))
                </if>
                <if test="cond.searchType == 'userId' and cond.keyword != ''">
                    PI.USER_ID LIKE LOWER(CONCAT('%', #{cond.keyword}, '%'))
                </if>
                <if test="cond.searchType == 'content' and cond.keyword != ''">
                    LOWER(P.CONTENT) LIKE LOWER(CONCAT('%', #{cond.keyword}, '%'))
                </if>
            </if>
        </where>
    </sql>



    <!-- INSERT -->
    <insert id="newPostItem">
        INSERT INTO
            POST_ITEM (POST_NUM, W_DATE, TITLE, URL, NICKNAME, USER_ID, USER_URL)
        VALUES
            (#{postNum}, #{wDate}, #{title}, #{url}, #{nickname}, #{userId}, #{userUrl})
    </insert>

    <insert id="newPost">
        INSERT INTO
            POST (POST_NUM, CONTENT)
        VALUES
            (#{postNum}, #{content})
    </insert>

    <insert id="newErrorPost">
        INSERT INTO
            ERROR_POST (POST_NUM, ERROR_DESC, ERROR_DATE)
        VALUES
            (#{postNum}, #{errorDesc}, now())
    </insert>

    <insert id="newLoginCookies">
        INSERT INTO
            LOGIN_COOKIES (DESC, JSON_COOKIES, LOGIN_DATE)
        VALUES
            (#{desc}, #{jsonCookies}, now())
    </insert>



    <!-- SELECT -->
    <select id="findPagedPostItemsBySearchCond" resultType="PostItem">
        SELECT
            PI.POST_NUM
            , PI.TITLE
            , PI.W_DATE
            , PI.NICKNAME
            , PI.USER_ID
            , PI.USER_URL
        FROM
            POST_ITEM PI
        INNER JOIN POST P
            ON PI.POST_NUM = P.POST_NUM
        <include refid="search"/>
        ORDER BY
            W_DATE DESC
        <include refid="paging"/>
    </select>

    <select id="findPostItemByPostNum" resultType="PostItem">
        SELECT
            *
        FROM
            POST_ITEM
        WHERE
            POST_NUM = #{postNum}

    </select>

    <select id="findPostByPostNum" resultType="Post">
        SELECT
            *
        FROM
            POST
        WHERE
            POST_NUM = #{postNum}
    </select>

    <select id="findErrorPost" resultType="ErrorDto">
        SELECT
        ERROR_NUM,
        POST_NUM
        FROM
        ERROR_POST
        WHERE
        POST_NUM != 0
        AND IS_RESOLVED = 0
        LIMIT 1
    </select>

    <select id="findLatestPostNum" resultType="Long">
        SELECT
            POST_NUM
        FROM
            POST_ITEM
        ORDER BY
            W_DATE DESC
        LIMIT 1
    </select>

    <select id="countPostItemsBySearchCond" resultType="Integer">
        SELECT
            COUNT(PI.POST_NUM)
        FROM
            POST_ITEM PI
        INNER JOIN POST P
            ON PI.POST_NUM = P.POST_NUM
        <include refid="search"/>
    </select>

    <select id="findLatestLoginCookiesByDesc" resultType="String">
        SELECT
            JSON_COOKIES
        FROM
            LOGIN_COOKIES
        WHERE
            DESC = #{desc}
        ORDER BY
            LOGIN_DATE DESC
        LIMIT 1
    </select>



    <!-- UPDATE -->
    <update id="resolveError">
        UPDATE
            ERROR_POST
        SET
            IS_RESOLVED = 1,
            RESOLVED_DATE = now()
        WHERE
            ERROR_NUM = #{errorNum}
    </update>



    <!-- DELETE -->
    <delete id="deletePostItemByPostNum">
        DELETE FROM
            POST_ITEM
        WHERE
            POST_NUM = #{postNum}
    </delete>

</mapper>